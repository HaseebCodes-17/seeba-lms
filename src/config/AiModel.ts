import { GoogleGenerativeAI } from "@google/generative-ai";

const apiKey = process.env.NEXT_PUBLIC_GEMINI_API_KEY;
const genAI = new GoogleGenerativeAI(apiKey!);

const model = genAI.getGenerativeModel({
  model: "gemini-2.0-flash-exp",
});

const generationConfig = {
  temperature: 1,
  topP: 0.95,
  topK: 40,
  maxOutputTokens: 8192,
  responseMimeType: "application/json",
};

// Course Outline
const CourseOutlineAiModel = model.startChat({
  generationConfig,
  history: [
    {
      role: "user",
      parts: [
        {
          text: "Generate a course for the purpose of interview prep of topic css with the difficulty level expert.The course should include title, description, an image related to course and chapters alogn with their title, description, emoji (The emoji should relate by each chapter), summary and topics.All result in JSON.",
        },
      ],
    },
    {
      role: "model",
      parts: [
        {
          text: '```json\n{\n  "course": {\n    "title": "CSS Mastery: Advanced Interview Preparation",\n    "description": "A deep dive into advanced CSS concepts and techniques designed to prepare you for even the most challenging front-end interviews. This course goes beyond the basics, exploring performance optimization, cutting-edge features, and complex layout strategies.",\n    "image": "https://placehold.co/600x400/9683FF/FFFFFF?text=CSS+Mastery",\n    "chapters": [\n      {\n        "title": "Advanced Selectors and Specificity",\n        "description": "Master the art of selecting elements with precision, understand specificity calculations, and learn to leverage advanced selectors for cleaner, more maintainable CSS.",\n        "emoji": "üéØ",\n        "summary": "Deep understanding of CSS selector syntax, specificity rules, and their practical implications for efficient styling.",\n        "topics": [\n          "Attribute selectors",\n          "Pseudo-classes and pseudo-elements",\n          "Combinators and their use cases",\n          "Specificity hierarchy and conflict resolution",\n          "Practical scenarios with complex selectors",\n          "Performance impact of different selector types"\n         ]\n      },\n      {\n        "title": "Layout Algorithms and Techniques",\n        "description": "Explore advanced layout techniques beyond basic floats and inline-block. Dive into Flexbox, Grid, and understand their nuances for creating complex and responsive layouts.",\n        "emoji": "üßÆ",\n        "summary": "In-depth knowledge of modern CSS layout tools and strategies for building complex and responsive designs",\n         "topics": [\n          "Flexbox fundamentals and advanced configurations",\n          "Grid layout for two-dimensional layouts",\n          "Responsive design with flex and grid",\n          "Layout algorithms and how they work",\n          "Layout performance optimizations",\n          "Use cases for different layout options"\n          ]\n      },\n      {\n        "title": "CSS Performance and Optimization",\n        "description": "Learn to write efficient CSS that loads fast and renders smoothly. Cover topics like repaint/reflow, critical CSS, and CSS architecture for scalable projects.",\n        "emoji": "üöÄ",\n        "summary": "Understanding CSS performance bottlenecks and strategies to improve loading and rendering speed.",\n         "topics": [\n          "Understanding repaint and reflow",\n          "Critical CSS and its implementation",\n          "CSS organization for scalability",\n          "Performance profiling with browser developer tools",\n          "Minification and compression",\n          "Font loading and optimization"\n          ]\n\n      },\n      {\n        "title": "Advanced CSS Features and Concepts",\n        "description": "Explore cutting-edge CSS features like custom properties, blend modes, filters, and modern CSS functions to elevate your styling game and showcase your expertise.",\n        "emoji": "‚ú®",\n         "summary": "Explore and implement modern CSS features to create sophisticated effects and animations.",\n         "topics": [\n           "Custom properties (CSS Variables)",\n           "Blend modes and filters",\n           "CSS functions (calc, clamp, min, max, etc.)",\n           "Animations and transitions",\n           "Understanding modern CSS architecture principles",\n           "Progressive enhancement"\n          ]\n      },\n      {\n       "title": "CSS Architecture and Maintainability",\n       "description":"Explore different CSS architectures and methodologies to create scalable, maintainable stylesheets. Understand the benefits and drawbacks of different approaches and choose what\'s best for your project",\n       "emoji":"üèóÔ∏è",\n       "summary":"Understand css structure principles to develop scalable projects with ease",\n         "topics":[\n          "CSS methodologies (BEM, SMACSS, OOCSS)",\n           "Component-based CSS",\n           "Naming conventions for maintainability",\n           "CSS modules and scoped styles",\n           "Dealing with legacy css",\n           "Tools for CSS management"\n        ]\n\n      },\n      {\n         "title": "Debugging and Troubleshooting CSS",\n          "description":"Learn effective strategies for debugging CSS issues with browser developer tools and mastering the art of fixing layout problems with specific techniques",\n          "emoji":"üêû",\n          "summary":"Hone your debugging skills to efficiently resolve CSS issues and optimize your workflow",\n           "topics":[\n             "Utilizing browser developer tools",\n             "Strategies for identifying and fixing layout problems",\n             "Techniques for debugging specificity issues",\n             "Common CSS pitfalls and how to avoid them",\n             "Effective communication with design team",\n             "Testing and validation process"\n             ]\n      }\n\n    ]\n  }\n}\n```\n',
        },
      ],
    },
  ],
});

// Notes
const NotesAiModel = model.startChat({
  generationConfig,
  history: [
    {
      role: "user",
      parts: [
        {
          text: 'Generate detailed notes for this topic (title\n"Introduction to Java and Setting Up"\ndescription\n"Get started with Java by understanding its core concepts, setting up y‚Ä¶"\nemoji\n"‚òï"\nsummary\n"Introduction to Java, setup and your first program."\n\ntopics\nArray (5)\n0\n"What is Java?"\n1\n"JVM, JRE, and JDK"\n2\n"Setting up your development environment"\n3\n"Writing and running a basic Java program"\n4\n"Understanding Java syntax basics") . All result in html tags but make sure to not including the any meta tag.Also apply suitable tailwind classes to describe notes clearly.',
        },
      ],
    },
    {
      role: "model",
      parts: [
        {
          text: '```html\n<div class="container mx-auto p-4">\n  <h1 class="text-3xl font-bold mb-4">‚òï Introduction to Java and Setting Up</h1>\n  <p class="text-gray-700 mb-6">Get started with Java by understanding its core concepts, setting up your development environment, and writing your first program. This section will guide you through the foundational steps to begin your Java journey.</p>\n\n  <div class="mb-8">\n    <h2 class="text-2xl font-semibold mb-2">What is Java?</h2>\n    <div class="bg-gray-100 p-4 rounded-md shadow-md">\n    <ul class="list-disc list-inside text-gray-800">\n      <li><strong>Object-Oriented Programming (OOP) Language:</strong> Java is built around the concept of objects, which encapsulate data and behavior. This promotes code reusability and organization.</li>\n      <li><strong>Platform Independent:</strong> Java\'s "Write Once, Run Anywhere" (WORA) principle means compiled Java code (bytecode) can run on any system with a Java Virtual Machine (JVM).</li>\n      <li><strong>Versatile:</strong> Java is used in a wide range of applications, including web development, mobile apps (Android), enterprise applications, and scientific software.</li>\n       <li><strong>Strongly Typed:</strong> Java enforces strict type checking, which helps catch errors early in development.</li>\n       <li><strong>Garbage Collected:</strong> Java manages memory automatically, reducing the risk of memory leaks.</li>\n    </ul>\n      </div>\n  </div>\n\n    <div class="mb-8">\n        <h2 class="text-2xl font-semibold mb-2">JVM, JRE, and JDK</h2>\n          <div class="bg-gray-100 p-4 rounded-md shadow-md">\n        <ul class="list-disc list-inside text-gray-800">\n            <li><strong>JVM (Java Virtual Machine):</strong> An abstract computing machine that executes Java bytecode. It\'s responsible for translating bytecode into machine-specific instructions for the underlying OS.</li>\n            <li><strong>JRE (Java Runtime Environment):</strong> Provides the necessary runtime environment for running Java applications. It includes the JVM and core Java libraries.</li>\n            <li><strong>JDK (Java Development Kit):</strong>  A superset of JRE, containing all the tools needed to develop, compile, and debug Java programs (e.g., compiler, debugger). You need the JDK to create Java applications.</li>\n             <li><strong>Relationship:</strong> JDK contains JRE, and JRE contains JVM. JDK > JRE > JVM.</li>\n        </ul>\n            </div>\n    </div>\n\n    <div class="mb-8">\n        <h2 class="text-2xl font-semibold mb-2">Setting up your development environment</h2>\n          <div class="bg-gray-100 p-4 rounded-md shadow-md">\n        <ul class="list-disc list-inside text-gray-800">\n             <li><strong>Install the JDK:</strong> Download the appropriate JDK version for your operating system from the official Oracle website or a trusted open-source distribution (e.g., OpenJDK).</li>\n            <li><strong>Set Environment Variables:</strong>\n                <ul>\n                 <li>Configure your system\'s environment variables to include the path to the JDK\'s `bin` directory. This allows you to execute Java commands from any location in your terminal or command prompt.</li>\n                  <li>On Windows, you would set the PATH and JAVA_HOME variables.</li>\n                    <li>On Linux and MacOS, you would edit your `.bashrc` or `.zshrc` files.</li>\n                </ul>\n           </li>\n              <li><strong>Choose an IDE or Text Editor:</strong>\n                  <ul>\n                       <li><strong>IDE (Integrated Development Environment):</strong> Consider IDEs like IntelliJ IDEA, Eclipse, or NetBeans for a complete development experience with features like debugging and auto-completion.</li>\n                         <li><strong>Text Editor:</strong> Alternatively, you can use lightweight text editors such as VS Code (with Java extensions), Sublime Text, or Atom.</li>\n                  </ul>\n              </li>\n           <li><strong>Verify Installation:</strong> Open a terminal or command prompt and type `java -version` and `javac -version`. If the installation is successful, you should see the installed Java version information.</li>\n        </ul>\n         </div>\n    </div>\n\n  <div class="mb-8">\n    <h2 class="text-2xl font-semibold mb-2">Writing and running a basic Java program</h2>\n      <div class="bg-gray-100 p-4 rounded-md shadow-md">\n    <ol class="list-decimal list-inside text-gray-800">\n      <li><strong>Create a Java File:</strong> Use a text editor or IDE to create a file named `HelloWorld.java`. Make sure the name matches the class name and the file ends with .java extension.</li>\n      <li><strong>Write the Code:</strong> Add the following code inside the file:\n        <pre><code class="language-java block bg-gray-200 p-2 rounded-md overflow-x-auto">\npublic class HelloWorld {\n  public static void main(String[] args) {\n    System.out.println("Hello, Java!");\n  }\n}\n        </code></pre>\n      </li>\n      <li><strong>Compile the Code:</strong> Open a terminal or command prompt, navigate to the directory where you saved `HelloWorld.java`, and run: `javac HelloWorld.java`. This will create a `HelloWorld.class` file (bytecode).</li>\n      <li><strong>Run the Code:</strong> In the same terminal, run: `java HelloWorld`. This will execute your program and print "Hello, Java!" to the console.</li>\n    </ol>\n        </div>\n  </div>\n\n  <div class="mb-8">\n    <h2 class="text-2xl font-semibold mb-2">Understanding Java syntax basics</h2>\n      <div class="bg-gray-100 p-4 rounded-md shadow-md">\n    <ul class="list-disc list-inside text-gray-800">\n      <li><strong>Classes:</strong> Java is an OOP language, everything resides in a class. A class is a blueprint for objects.</li>\n        <li><strong>`main` Method:</strong>  The `public static void main(String[] args)` method is the entry point of your Java applications. The JVM starts execution from here.\n            <ul>\n                <li>`public`: Accessibility modifier. The method is accessible from anywhere.</li>\n                 <li>`static`: The method belongs to the class, not an instance of the class.</li>\n                  <li>`void`: This method does not return any value.</li>\n                  <li>`String[] args`: Command line arguments to pass to the java application during execution.</li>\n            </ul>\n        </li>\n      <li><strong>Statements:</strong> Instructions in a Java program, always ending with a semicolon (;).</li>\n        <li><strong>`System.out.println()`:</strong> Used to print output to the console.</li>\n       <li><strong>Comments:</strong>\n           <ul>\n               <li>Single line comments start with `//`.</li>\n               <li>Multi-line comments are enclosed with `/*` and `*/`.</li>\n           </ul>\n       </li>\n      <li><strong>Case Sensitive:</strong>  Java is case-sensitive. `MyVar` is different from `myvar`.</li>\n    </ul>\n        </div>\n  </div>\n\n</div>\n```\n',
        },
      ],
    },
  ],
});

// FlashCards
const FlashCardsAiModel = model.startChat({
  generationConfig,
  history: [
    {
      role: "user",
      parts: [
        {
          text: 'Generate at least 15 flash cards for this topic (\nTitle: \n"CSS Interview Prep: Comprehensive Guide",\nDescription:\n"A comprehensive course designed to help you prepare for CSS-related interview questions. This course covers everything from basic concepts to more advanced techniques, ensuring you have a solid understanding of CSS for any interview scenario.").Back side should not be much longer.All result in JSON.',
        },
      ],
    },
    {
      role: "model",
      parts: [
        {
          text: '```json\n[\n  {\n    "front": "What is CSS?",\n    "back": "CSS (Cascading Style Sheets) is a style sheet language used for describing the presentation of a document written in HTML or XML."\n  },\n  {\n    "front": "Explain the CSS Box Model.",\n    "back": "The CSS Box Model describes the rectangular boxes that are generated for elements in the document tree and laid out according to the visual formatting model. It consists of content, padding, border, and margin."\n  },\n  {\n    "front": "What are CSS selectors?",\n     "back":"CSS selectors are used to select the HTML elements you want to style. They can be based on element names, classes, IDs, attributes, and relationships to other elements."\n  },\n   {\n    "front": "List some common CSS selectors.",\n    "back": "Examples include: element selectors (`p`), class selectors (`.my-class`), ID selectors (`#my-id`), attribute selectors (`[type=\'text\']`), and combinators (`div p`)."\n  },\n   {\n    "front":"What is the difference between `id` and `class` selectors?",\n     "back":"An `id` selector applies a style to a unique element in the document. A `class` selector applies styles to multiple elements."\n  },\n  {\n     "front":"What are the three ways to include CSS in a HTML document?",\n      "back":"Inline (within HTML tags), Internal (inside `<style>` tags in the `<head>`), and External (linked using `<link>` in the `<head>`)."\n  },\n  {\n    "front": "What is the difference between `display: none;` and `visibility: hidden;`?",\n    "back": "`display: none;` removes the element from the document flow. `visibility: hidden;` hides the element, but it still occupies space in the layout."\n  },\n   {\n    "front":"What is specificity in CSS?",\n     "back":"Specificity is the process a browser uses to determine which CSS rule to apply when multiple rules target the same element. More specific rules override less specific ones."\n  },\n  {\n     "front":"How do you make a website responsive?",\n     "back":"Using techniques like fluid grids, flexible images, and media queries to adapt the layout based on screen size."\n  },\n    {\n    "front": "What is a media query in CSS?",\n    "back": "A media query allows you to apply different styles based on characteristics of the device and screen, like width, height, resolution, orientation, etc."\n   },\n   {\n    "front":"What are pseudo-classes and pseudo-elements?",\n    "back":"Pseudo-classes select elements based on state, like `:hover`, `:focus`, or `:active`. Pseudo-elements style specific parts of an element, like `::before`, `::after`, or `::first-line`."\n  },\n {\n    "front":"Explain CSS Flexbox.",\n    "back":"Flexbox is a one-dimensional layout model for arranging items in a container, making it easier to handle dynamic and flexible layouts."\n  },\n  {\n    "front":"Explain CSS Grid.",\n    "back":"CSS Grid is a powerful two-dimensional layout model that enables precise control over rows and columns, allowing for complex layouts."\n  },\n  {\n    "front": "What is the purpose of `z-index`?",\n    "back": "`z-index` specifies the stack order of positioned elements. An element with a higher `z-index` value is placed in front of elements with lower `z-index` values."\n  },\n    {\n      "front": "What is CSS preprocessor?",\n       "back":"A CSS preprocessor extends the functionality of CSS using variables, mixins, functions, and other programming constructs. Example: Sass or Less"\n  },\n  {\n    "front": "How do you center an element horizontally and vertically using CSS?",\n    "back": "Several ways, commonly using flexbox (`display:flex; justify-content:center; align-items:center;`) or grid (`display:grid; place-items: center;`)"\n  }\n]\n```\n',
        },
      ],
    },
  ],
});

// Quizes
const QuizesAiModel = model.startChat({
  generationConfig,
  history: [
    {
      role: "user",
      parts: [
        {
          text: "Generate at lest 12 quizes for this topic (Title: CSS Interview Prep: Comprehensive Guide, Description: A comprehensive course designed to help you prepare for CSS-related interview questions. This course covers everything from basic concepts to more advanced techniques, ensuring you have a solid understanding of CSS for any interview scenario.).All result in JSON.",
        },
      ],
    },
    {
      role: "model",
      parts: [
        {
          text: '```json\n[\n  {\n    "quizId": 1,\n    "title": "CSS Selectors: Basics",\n    "description": "Test your understanding of basic CSS selectors.",\n    "questions": [\n      {\n        "question": "Which selector targets all paragraph elements?",\n        "options": ["#paragraph", ".paragraph", "p", "paragraph"],\n        "answer": "p"\n      },\n      {\n        "question": "Which selector targets an element with the class \'container\'?",\n        "options": ["#container", ".container", "container", "element.container"],\n        "answer": ".container"\n      },\n      {\n        "question": "Which selector targets an element with the ID \'header\'?",\n        "options": [".header", "#header", "header", "element#header"],\n        "answer": "#header"\n      },\n      {\n          "question": "What does the `*` selector target?",\n          "options": ["All elements in the document", "The first element in the document", "All elements with no specific tag", "The parent element"],\n           "answer": "All elements in the document"\n      }\n    ]\n  },\n  {\n    "quizId": 2,\n    "title": "CSS Specificity",\n    "description": "Test your knowledge of CSS specificity rules.",\n      "questions": [\n      {\n        "question": "Which selector has higher specificity: `.my-class` or `#my-id`?",\n        "options": [".my-class", "#my-id", "They have the same specificity", "Specificity cannot be determined"],\n        "answer": "#my-id"\n      },\n       {\n          "question": "If two CSS rules both apply to an element, the rule with higher...?",\n          "options": ["Weight", "Color", "Specificity", "Resolution"],\n          "answer": "Specificity"\n      },\n      {\n        "question": "In the specificity calculation, which has higher priority: Inline styles or an ID selector?",\n          "options": ["Inline styles", "ID selector", "They have equal priority", "It depends on the order in CSS"],\n        "answer": "Inline styles"\n      },\n      {\n         "question":"What is the order of specificity from lowest to highest?",\n          "options":["ID, Class, Element, Inline", "Element, Class, ID, Inline", "Class, Element, ID, Inline", "Inline, ID, Class, Element"],\n         "answer": "Element, Class, ID, Inline"\n      }\n    ]\n  },\n   {\n    "quizId": 3,\n    "title": "Box Model",\n    "description": "Test your understanding of the CSS Box Model.",\n     "questions": [\n        {\n          "question": "Which of the following are components of the box model?",\n          "options": ["Border, Margins, Padding", "Padding, Text, Background", "Margins, Background, Border", "Border, Padding, Shadow"],\n          "answer": "Border, Margins, Padding"\n        },\n        {\n          "question":"Which CSS property controls the space outside the element\'s border?",\n          "options":["padding", "border", "margin", "outline"],\n          "answer":"margin"\n        },\n        {\n          "question": "Which CSS property controls the space between the border and the content of an element?",\n          "options": ["margin", "border", "padding", "content"],\n          "answer": "padding"\n        },\n        {\n           "question": "What does the `border-box` value for `box-sizing` do?",\n            "options": ["Adds borders inside content area", "Makes padding a part of the element\'s width and height", "Adds a border outside the element", "No effect on the box model"],\n           "answer": "Makes padding a part of the element\'s width and height"\n         }\n      ]\n    },\n  {\n    "quizId": 4,\n    "title": "Display Property",\n    "description": "Test your knowledge of CSS display property.",\n      "questions": [\n      {\n        "question": "Which `display` value creates a block-level element?",\n        "options": ["inline", "block", "inline-block", "none"],\n        "answer": "block"\n      },\n      {\n        "question": "Which `display` value allows elements to sit side-by-side but still respect height and width?",\n        "options": ["inline", "block", "inline-block", "none"],\n         "answer": "inline-block"\n      },\n       {\n        "question": "Which `display` value hides the element and doesn\'t take up space in the layout?",\n        "options": ["inline", "block", "inline-block", "none"],\n        "answer": "none"\n      },\n        {\n        "question":"Which property is used to manage the layout of a webpage?",\n        "options":["size","display","style","font"],\n        "answer": "display"\n      }\n    ]\n  },\n    {\n    "quizId": 5,\n    "title": "Positioning",\n    "description": "Test your understanding of CSS positioning.",\n        "questions": [\n      {\n        "question": "Which `position` value removes an element from the normal document flow and positions it relative to its nearest positioned ancestor?",\n        "options": ["static", "relative", "absolute", "fixed"],\n        "answer": "absolute"\n      },\n       {\n        "question": "Which `position` value positions an element relative to its normal position?",\n        "options": ["static", "relative", "absolute", "fixed"],\n         "answer": "relative"\n       },\n        {\n        "question":"Which `position` value is the default for all HTML elements?",\n         "options":["static", "relative", "absolute", "fixed"],\n          "answer":"static"\n        },\n        {\n        "question": "Which `position` value fixes an element to the viewport?",\n        "options": ["static", "relative", "absolute", "fixed"],\n        "answer": "fixed"\n      }\n    ]\n  },\n    {\n        "quizId": 6,\n        "title": "Flexbox",\n        "description": "Test your understanding of CSS Flexbox.",\n      "questions": [\n         {\n            "question": "What property is used to make a container a flex container?",\n            "options": ["display: flex", "flex-container: true", "layout: flex", "container: flex"],\n            "answer": "display: flex"\n        },\n        {\n          "question": "Which property controls the direction of flex items?",\n          "options": ["flex-direction", "flex-wrap", "justify-content", "align-items"],\n          "answer": "flex-direction"\n        },\n          {\n           "question": "Which property aligns flex items along the main axis?",\n            "options": ["flex-direction", "flex-wrap", "justify-content", "align-items"],\n            "answer": "justify-content"\n          },\n        {\n         "question":"Which property is used to wrap the flex items when they do not fit in single line?",\n         "options": ["flex-wrap","flex-direction", "justify-content","align-items"],\n         "answer": "flex-wrap"\n         }\n       ]\n     },\n   {\n        "quizId": 7,\n        "title": "Grid Layout",\n        "description": "Test your understanding of CSS Grid Layout.",\n        "questions": [\n          {\n          "question": "Which property makes an element a grid container?",\n            "options": ["display: grid", "grid-container: true", "layout: grid", "container: grid"],\n            "answer":"display: grid"\n        },\n        {\n            "question": "Which property is used to define the number and width of columns in the grid?",\n             "options": ["grid-rows", "grid-columns", "grid-template-columns", "grid-template-rows"],\n             "answer": "grid-template-columns"\n        },\n        {\n          "question": "Which property is used to align grid items along the row axis?",\n            "options": ["justify-items","align-items","justify-content", "align-content"],\n            "answer": "justify-items"\n        },\n        {\n          "question":"What is the property used to set the size of the column gap?",\n          "options": ["row-gap", "column-gap", "gap", "grid-gap"],\n          "answer":"column-gap"\n        }\n      ]\n    },\n  {\n    "quizId": 8,\n    "title": "CSS Units",\n    "description": "Test your understanding of CSS units.",\n    "questions": [\n        {\n            "question": "Which unit represents a percentage of the parent element\'s font size?",\n            "options": ["px", "em", "rem", "vh"],\n            "answer": "em"\n        },\n      {\n         "question":"Which unit is relative to the font size of the root element?",\n           "options": ["px", "em", "rem", "vw"],\n          "answer": "rem"\n        },\n       {\n           "question":"What does `vh` stand for?",\n            "options": ["View height", "Viewport height", "Vertical height", "Variable height"],\n           "answer": "Viewport height"\n       },\n        {\n         "question": "Which of the following is an absolute unit?",\n         "options": ["em", "rem", "px", "vw"],\n         "answer": "px"\n        }\n    ]\n  },\n  {\n    "quizId": 9,\n    "title": "CSS Transitions and Animations",\n    "description": "Test your knowledge of CSS transitions and animations.",\n    "questions":[\n       {\n         "question":"Which property defines the CSS properties to transition?",\n         "options": ["transition-timing-function", "transition-duration", "transition-property", "transition-delay"],\n          "answer": "transition-property"\n       },\n      {\n        "question": "Which CSS property is used to specify the speed curve of a transition?",\n        "options": ["transition-timing-function", "transition-delay", "transition-duration", "transition-transform"],\n        "answer": "transition-timing-function"\n      },\n        {\n        "question": "Which CSS property is used to create a sequence of frames?",\n        "options": ["transition", "animation", "transform", "keyframes"],\n        "answer": "animation"\n      },\n        {\n           "question":"Which property is used to define a starting point or end point in a transition?",\n            "options":["from", "start", "0%", "1"],\n            "answer": "0%"\n      }\n    ]\n  },\n  {\n    "quizId": 10,\n    "title": "CSS Media Queries",\n    "description": "Test your understanding of CSS Media Queries.",\n    "questions": [\n      {\n        "question": "What is the main purpose of CSS media queries?",\n        "options": ["To create visual effects", "To make websites responsive", "To increase website loading speed", "To manage website performance"],\n        "answer": "To make websites responsive"\n      },\n      {\n        "question": "Which keyword is used in CSS media queries to check the device\'s screen size?",\n          "options":["@device", "@size", "@media", "@screen"],\n        "answer": "@media"\n      },\n      {\n        "question": "What does \'max-width\' mean in a media query?",\n          "options": ["Maximum device height", "Maximum browser width", "Maximum element width", "Maximum screen width"],\n         "answer": "Maximum screen width"\n      },\n        {\n           "question":"What does \'orientation: portrait\'  in a media query check?",\n            "options": ["Whether the device is landscape", "Whether the device is portrait", "The screen rotation speed", "The device\'s resolution"],\n            "answer": "Whether the device is portrait"\n       }\n    ]\n  },\n  {\n    "quizId": 11,\n    "title": "CSS Transforms",\n    "description": "Test your knowledge of CSS transforms.",\n    "questions": [\n      {\n        "question": "Which CSS property is used to rotate an element?",\n        "options": ["translate()", "scale()", "rotate()", "skew()"],\n        "answer": "rotate()"\n      },\n      {\n         "question": "Which CSS property is used to change the size of an element?",\n        "options": ["translate()", "scale()", "rotate()", "skew()"],\n        "answer": "scale()"\n      },\n      {\n         "question": "Which property is used to move an element from its initial position?",\n         "options": ["translate()", "scale()", "rotate()", "skew()"],\n        "answer": "translate()"\n       },\n      {\n         "question": "What is the purpose of the `transform` property?",\n         "options": ["To change font size", "To alter an element\'s position, shape, or orientation", "To create grid layouts", "To style form elements"],\n          "answer": "To alter an element\'s position, shape, or orientation"\n       }\n    ]\n  },\n  {\n      "quizId": 12,\n      "title":"Advanced CSS Concepts",\n      "description": "Test your understanding of some advanced CSS concepts",\n    "questions":[\n      {\n          "question":"What is the purpose of the `z-index` property?",\n           "options": ["To change the color of an element", "To control the stacking order of positioned elements", "To set an element\'s width", "To change an element\'s font size"],\n           "answer":"To control the stacking order of positioned elements"\n      },\n     {\n        "question": "What is a CSS preprocessor (e.g., Sass, Less)?",\n          "options": ["A browser extension for styling", "A library for creating animations", "A tool that extends CSS with features like variables and mixins", "A JavaScript framework for styling"],\n         "answer": "A tool that extends CSS with features like variables and mixins"\n      },\n       {\n          "question": "What does the `::before` pseudo-element create?",\n           "options": ["An element after the content of a selected element", "An element before the content of a selected element", "A new element outside of the selected element", "A new class for styling"],\n            "answer": "An element before the content of a selected element"\n       },\n        {\n          "question":"What is the purpose of CSS Variables (Custom properties)?",\n           "options": ["To store data in local storage","To make code more maintainable by reducing repetition", "To create animations using CSS", "To change website layout in different browsers"],\n            "answer": "To make code more maintainable by reducing repetition"\n      }\n    ]\n  }\n]\n```',
        },
      ],
    },
  ],
});

export { CourseOutlineAiModel, NotesAiModel, FlashCardsAiModel, QuizesAiModel };
